---
- name: Install build requirements
  become: true
  ansible.builtin.apt:
    state: present
    name:
      - libsodium-dev
      - cmake
      - make
      - pkg-config

- name: Check if minisign is installed
  ansible.builtin.command: "minisign -v"
  register: minisign_present
  ignore_errors: true
  changed_when: false

- name: Create buid directory
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: tmp_dir_build

- name: Download minisign sources and verify checksum
  ansible.builtin.get_url:
    url: "{{ minisign_download_release_url }}"
    dest: "{{ tmp_dir_build.path }}/minisign.tar.gz"
    checksum: "sha512:{{ minisign_version_sha512sum }}"
    mode: u=rw,g=,o=
  when: minisign_present is failed

- name: Download minisign sources and verify it with minisign
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: u=rw,g=,o=
  when: minisign_present is not failed
  with_items:
    - { url: "{{ minisign_download_release_url }}", dest: "{{ tmp_dir_build.path }}/minisign.tar.gz" }
    - { url: "{{ minisign_download_signature_release_url }}", dest: "{{ tmp_dir_build.path }}/minisign.tar.gz.minisig" }

- name: Verify downloaded minisign using minisign
  ansible.builtin.command: "minisign -Vm '{{ tmp_dir_build.path|quote }}/minisign.tar.gz' -P '{{ minisign_public_key|quote }}'"
  when: minisign_present is not failed

- name: Extract downloaded files
  ansible.builtin.unarchive:
    src: "{{ tmp_dir_build.path }}/minisign.tar.gz"
    dest: "{{ tmp_dir_build.path }}"
    remote_src: true

- name: Build minisign | create build directory
  ansible.builtin.file:
    state: directory
    path: "{{ tmp_dir_build.path }}/minisign-{{ minisign_version }}/build"
    mode: u=rwx,g=,o=

- name: Build minisign | cmake build
  ansible.builtin.command:
    cmd: cmake .. -D BUILD_STATIC_EXECUTABLES=1
    chdir: "{{ tmp_dir_build.path }}/minisign-{{ minisign_version }}/build"
  changed_when: true

- name: Build minisign | make
  make:
    chdir: "{{ tmp_dir_build.path }}/minisign-{{ minisign_version }}/build"

- name: Build minisign | make install
  become: true
  make:
    chdir: "{{ tmp_dir_build.path }}/minisign-{{ minisign_version }}/build"
    target: install

- name: Cleanup build directory
  ansible.builtin.file:
    state: absent
    path: "{{ tmp_dir_build.path }}"
...
